name: Release FHIR Mock Node library
on:
  push:
    paths:
      - .github/workflows/fhir-mock-release.yml
      - 'libs/fhir-mock/**'
      - 'scripts/libs/**'

jobs:
  should_release:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.check.outputs.skip }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - id: check
        run: |
          if [ "${GITHUB_REF}" != "refs/heads/main" ]; then
              echo "skip=true" >> "$GITHUB_OUTPUT"
              echo "⏭️ Skipping release because not on main branch." >> "$GITHUB_STEP_SUMMARY"
              exit 0
          fi

          body="$(git log -1 --pretty=%B | tail -n +2)"
          if echo "$body" | grep -qi 'skip release'; then
            echo "skip=true" >> "$GITHUB_OUTPUT"
            echo "⏭️ Skipping release due to 'skip release' in commit message." >> "$GITHUB_STEP_SUMMARY"
          else
            echo "skip=false" >> "$GITHUB_OUTPUT"
            echo "✅ Proceeding with release." >> "$GITHUB_STEP_SUMMARY"
          fi

  build_and_release:
    permissions:
      id-token: write
      packages: write
      contents: write
    runs-on: ubuntu-latest
    needs: should_release
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - id: corepack
        shell: bash
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: yarn
      - run: yarn --immutable
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: yarn tsc
        working-directory: libs/fhir-mock
      - name: Publish package
        if: github.ref == 'refs/heads/main' && needs.should_release.outputs.skip == 'false'
        run: |
          ./scripts/libs/create-release.sh fhir-mock
          ./scripts/libs/set-version.sh fhir-mock
          cd libs/fhir-mock && yarn npm publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
