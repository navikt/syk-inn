interface FomTom {
    fom: DateOnly!
    tom: DateOnly!
}

enum AktivitetType {
    AKTIVITET_IKKE_MULIG
    AVVENTENDE
    BEHANDLINGSDAGER
    GRADERT
    REISETILSKUDD
}

type AktivitetIkkeMulig implements FomTom {
    type: AktivitetType!
    fom: DateOnly!
    tom: DateOnly!
    # TODO: Mark as non-nullable once data is migrated in syk-inn-api
    medisinskArsak: MedisinskArsak
    # TODO: Mark as non-nullable once data is migrated in syk-inn-api
    arbeidsrelatertArsak: ArbeidsrelatertArsak
}

type MedisinskArsak {
    isMedisinskArsak: Boolean!
}

enum ArbeidsrelatertArsakType {
    TILRETTELEGGING_IKKE_MULIG
    ANNET
}

type ArbeidsrelatertArsak {
    isArbeidsrelatertArsak: Boolean!
    arbeidsrelaterteArsaker: [ArbeidsrelatertArsakType!]!
    annenArbeidsrelatertArsak: String
}

type Avventende implements FomTom {
    type: AktivitetType!
    fom: DateOnly!
    tom: DateOnly!
    innspillTilArbeidsgiver: String!
}

type Behandlingsdager implements FomTom {
    type: AktivitetType!
    fom: DateOnly!
    tom: DateOnly!
    antallBehandlingsdager: Int!
}

type Gradert implements FomTom {
    type: AktivitetType!
    fom: DateOnly!
    tom: DateOnly!
    grad: Int!
}

type Reisetilskudd implements FomTom {
    type: AktivitetType!
    fom: DateOnly!
    tom: DateOnly!
}

union Aktivitet = AktivitetIkkeMulig | Avventende | Behandlingsdager | Gradert | Reisetilskudd

type AktivitetLight implements FomTom {
    type: AktivitetType!
    fom: DateOnly!
    tom: DateOnly!
}