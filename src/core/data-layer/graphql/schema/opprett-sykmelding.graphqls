union OpprettetSykmelding = OpprettSykmeldingRuleOutcome | SykmeldingFull

type OpprettSykmeldingRuleOutcome {
    status: String!
    message: String!
    rule: String!
    tree: String!
}

input OpprettSykmeldingInput {
    pasientenSkalSkjermes: Boolean!
    hoveddiagnose: InputDiagnose!
    bidiagnoser: [InputDiagnose!]!
    aktivitet: [InputAktivitet!]!
    meldinger: InputMeldinger!
    svangerskapsrelatert: Boolean!
    yrkesskade: InputYrkesskade
    arbeidsforhold: InputArbeidsforhold
    tilbakedatering: InputTilbakedatering
}

input InputDiagnose {
    code: String!
    system: DiagnoseSystem!
}

input InputYrkesskade {
    yrkesskade: Boolean!
    skadedato: DateOnly
}

input InputMeldinger {
    tilNav: String
    tilArbeidsgiver: String
}

input InputArbeidsforhold {
    arbeidsgivernavn: String!
}

input InputTilbakedatering {
    startdato: String!
    begrunnelse: String!
}

"""
An ugly approach because the limitations of GraphQL
input types where union types are not supported.

See: https://github.com/graphql/graphql-wg/blob/main/rfcs/InputUnion.md
"""
input InputAktivitet {
    type: AktivitetType!
    fom: String!
    tom: String!
    gradert: GradertInput
    aktivitetIkkeMulig: AktivitetIkkeMuligInput
    avventende: AvventendeInput
    behandlingsdager: BehandlingsdagerInput
    reisetilskudd: ReisetilskuddInput
    medisinskArsak: MedisinskArsakInput
    arbeidsrelatertArsak: ArbeidsrelatertArsakInput
}

input GradertInput {
    grad: Int!
    reisetilskudd: Boolean!
}

input AktivitetIkkeMuligInput {
    dummy: Boolean!
}

input ReisetilskuddInput {
    dummy: Boolean!
}

input AvventendeInput {
    innspillTilArbeidsgiver: String!
}

input BehandlingsdagerInput {
    antallBehandlingsdager: Int!
}

input MedisinskArsakInput {
    isMedisinskArsak: Boolean!
}

input ArbeidsrelatertArsakInput {
    isArbeidsrelatertArsak: Boolean!
    arbeidsrelaterteArsaker: [String!]!
    annenArbeidsrelatertArsak: String
}
